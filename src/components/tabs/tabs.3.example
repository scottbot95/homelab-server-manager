{
    #[derive(Clone, Copy, PartialEq, Eq)]
    enum TabIndex {
        Foo,
        Bar,
        Baz,
    }

    #[function_component(Example)]
    fn example() -> Html {
        let selected = use_state_eq(|| TabIndex::Foo);
        let onselect = use_callback(selected.clone(), |index, selected| selected.set(index));

        html! (
            <>
                <Tabs<TabIndex> detached=true {onselect} selected={*selected} r#box=true>
                    <Tab<TabIndex> index={TabIndex::Foo} title="Foo"/>
                    <Tab<TabIndex> index={TabIndex::Bar} title="Bar"/>
                    <Tab<TabIndex> index={TabIndex::Baz} title={html!(<>{"Baz "} <Badge>{"42"}</Badge></>)}/>
                </Tabs<TabIndex>>
                <section hidden={(*selected) != TabIndex::Foo}>{ "Foo" }</section>
                <section hidden={(*selected) != TabIndex::Bar}>{ "Bar" }</section>
                <section hidden={(*selected) != TabIndex::Baz}>{ "Baz" }</section>
            </>
        )
    }

    html!(<Example/>)
}