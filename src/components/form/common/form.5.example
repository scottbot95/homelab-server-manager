{
    #[function_component(Example)]
    pub fn example() -> Html {
        let value = use_state_eq(String::default);
        let onchange = use_callback(value.clone(), |new_value, value|value.set(new_value));

        html!(
            <Form>
                <FormGroupValidated<TextInput>
                    label="Some text"
                    required=true
                    validator={Validator::from(|ctx: ValidationContext<String>| {
                        if ctx.initial {
                            ValidationResult::default()
                        } else if ctx.value.is_empty() {
                            ValidationResult::error("Must not be empty")
                        } else if ctx.value.contains("foo") {
                            ValidationResult::warning("Should not contain 'foo'")
                        } else if ctx.value == "Nur ein Wort" {
                            ValidationResult::new(InputState::Success, "Congratulations, you found the magic value!")
                        } else {
                            ValidationResult::default()
                        }
                    })}
                >
                    <TextInput
                        value={(*value).clone()}
                        {onchange}
                        placeholder="Enter some text"
                    />
                </FormGroupValidated<TextInput>>
            </Form>
        )
    }

    html!(<Example/>)
}