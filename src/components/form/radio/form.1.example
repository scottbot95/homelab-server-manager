{
    #[function_component(Example)]
    fn example() -> Html {

        #[derive(Copy, Clone, PartialEq, Eq, strum::Display)]
        enum Option {
            Foo, Bar, Baz,
        }

        let state = use_state_eq(|| Option::Foo);

        let onfoo = use_callback(state.clone(), |_, state| state.set(Option::Foo));
        let onbar = use_callback(state.clone(), |_, state| state.set(Option::Bar));
        let onbaz = use_callback(state.clone(), |_, state| state.set(Option::Baz));

        html!(
            <>
                <Radio name="value" onchange={onfoo} checked={*state == Option::Foo}>{"Foo"}</Radio>
                <Radio name="value" onchange={onbar} checked={*state == Option::Bar} disabled=true>{"Bar"}</Radio>
                <Radio name="value" onchange={onbaz} checked={*state == Option::Baz}>{"Baz"}</Radio>
                <TextInput value={(*state).to_string()} readonly=true />
            </>
        )

    }

    html!(<Example/>)
}
